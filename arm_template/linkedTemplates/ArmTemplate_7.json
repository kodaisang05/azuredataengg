{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "SangeethaTraining2024ADF"
        },
        "storage_event_trigger1_properties_typeProperties_scope": {
            "type": "string",
            "defaultValue": "/subscriptions/c5f5b22f-b46d-498a-b0a0-35c1ebdf17e7/resourceGroups/SangeethaTraining2024/providers/Microsoft.Storage/storageAccounts/sangeethatrain2024adls"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/ass7_two_triggers_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select * from @{pipeline().parameters.sql_table_name}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_sql_pipeline_param",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ass7_adls",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderName": {
                                        "value": "@pipeline().parameters.folder_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sql_table_name": {
                        "type": "string",
                        "defaultValue": "saleslt.customeraddress"
                    },
                    "folder_name": {
                        "type": "string",
                        "defaultValue": "customeraddress"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-09T18:51:38Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ass7_incremental_load_set_variable')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get lastmodifieddate from customeradd",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select max(modifieddate) as lastmodifieddate from saleslt.customeraddress where modifieddate >'@{pipeline().parameters.highwatermarkdate}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "sql_ds_new",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "incremental load customeraddress",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Set last modified date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select * from saleslt.customeraddress where modifieddate> '@{pipeline().parameters.highwatermarkdate}'and modifieddate <= '@{variables('lastmodifieddate')}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_sql_hwm",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ass7_adls",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderName": "Incrementalload_CustomerAdd"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Set last modified date",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "get lastmodifieddate from customeradd",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "lastmodifieddate",
                            "value": {
                                "value": "@activity('get lastmodifieddate from customeradd').output.firstRow.lastmodifieddate",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Update Highwatermark Date",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "incremental load customeraddress",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "highwatermarkdate",
                            "value": {
                                "value": "@variables('lastmodifieddate')",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "highwatermarkdate": {
                        "type": "string",
                        "defaultValue": "1900-01-01"
                    }
                },
                "variables": {
                    "highwatermarkdate": {
                        "type": "String"
                    },
                    "lastmodifieddate": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-11T03:44:47Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ass7_dateRange_customer_data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT * \nFROM saleslt.Customer\nWHERE ModifiedDate BETWEEN  '@{pipeline().parameters.startdate}' and '@{pipeline().parameters.enddate}';",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_sql_date_param",
                                "type": "DatasetReference",
                                "parameters": {
                                    "startdate": {
                                        "value": "@pipeline().parameters.startdate",
                                        "type": "Expression"
                                    },
                                    "enddate": {
                                        "value": "@pipeline().parameters.enddate",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ass7_adls",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderName": "customer_dateRange"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "startdate": {
                        "type": "string",
                        "defaultValue": "2005-08-01"
                    },
                    "enddate": {
                        "type": "string",
                        "defaultValue": "2007-09-01"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-10T14:11:25Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/copy_files_which_not_empty')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Metadata1",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_inputfiles",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Metadata1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Metadata1').output.childItems",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Get Metadata2",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_adls_ass_inputfiles",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "filepath": "@item().name"
                                            }
                                        },
                                        "fieldList": [
                                            "size"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "Is file Empty",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Metadata2",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('Get Metadata2').output.size,0)",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "nonemptyfiles",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.12:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_adls_ass_inputfiles",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "filepath": "@item().name"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_adls_daily_assignments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "FolderName": "day2_copy_files_non_empty"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-12-11T15:05:07Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ass_copy_files_nonempty')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Metadata1",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_inputfiles",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Metadata1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Metadata1').output.childItems",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Set variable1",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "FileName",
                                        "value": {
                                            "value": "@item().name",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Lookup1",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Set variable1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFileName": {
                                                    "value": "@variables('FileName')",
                                                    "type": "Expression"
                                                },
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "ds_inputfiles",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(activity('Lookup1').output.firstRow.count,0)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Copy data1",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.12:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "wildcardFileName": {
                                                                "value": "@variables('FileName')",
                                                                "type": "Expression"
                                                            },
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_inputfiles",
                                                        "type": "DatasetReference",
                                                        "parameters": {}
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_adls_daily_assignments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "FolderName": "non_empty_files_setvar"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "FileName": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-11T15:30:20Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ass_olderfiles_delete_adls')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Metadata1",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_delete",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "modifiedDatetimeStart": {
                                    "value": "@startOfDay(adddays('2024-11-07',-7))",
                                    "type": "Expression"
                                },
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Metadata1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Metadata1').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "Delete1",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_adls_delete",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "logStorageSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "ls_adls_new",
                                                "type": "LinkedServiceReference"
                                            }
                                        },
                                        "enableLogging": true,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "wildcardFileName": {
                                                "value": "@item().name",
                                                "type": "Expression"
                                            },
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "FileNames": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-11T17:42:30Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ass_empty_nonempty_folder_finding')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Metadata1",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_directories",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Metadata1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Metadata1').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get Metadata2",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "DS_adls_folders",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FolderName": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "childItems"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Metadata2",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@empty(activity('Get Metadata2').output.childItems)",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Append variable2",
                                                "type": "AppendVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "NonEmpty Folder",
                                                    "value": {
                                                        "value": "@item().name",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Append variable1",
                                                "type": "AppendVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "Empty Folder",
                                                    "value": {
                                                        "value": "@item().name",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "additionalColumns": [
                                    {
                                        "name": "EmptyFolders",
                                        "value": {
                                            "value": "@[variables('Empty Folder')]",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "NonEmptyFolders",
                                        "value": {
                                            "value": "@[variables('NonEmpty Folder')]",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "EmptyFolders",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EmptyFolders",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "NonEmptyFolders",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "NonEmptyFolders",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_EmptyNonempty_Folder",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_adls_daily_assignments",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderName": "Ass_Empty_Nonempty_Folders"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "NonEmpty Folder": {
                        "type": "Array"
                    },
                    "Empty Folder": {
                        "type": "Array"
                    },
                    "output": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-13T14:29:16Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/set variable_empty_nonempty_folder_finding')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Metadata1",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_directories",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Metadata1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Metadata1').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get Metadata2",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "DS_adls_folders",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FolderName": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "childItems"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Metadata2",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@empty(activity('Get Metadata2').output.childItems)",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Append variable2",
                                                "type": "AppendVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "NonEmpty Folder",
                                                    "value": {
                                                        "value": "@item().name",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Append variable1",
                                                "type": "AppendVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "Empty Folder",
                                                    "value": {
                                                        "value": "@item().name",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set variable1",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Empty1",
                            "value": {
                                "value": "@variables('Empty Folder')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set variable2",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set variable1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "NonEmpty",
                            "value": {
                                "value": "@variables('NonEmpty Folder')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Set variable2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "additionalColumns": [
                                    {
                                        "name": "EmptyFolders",
                                        "value": {
                                            "value": "@{variables('Empty1')}",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "NonEmptyFolders",
                                        "value": {
                                            "value": "@{variables('NonEmpty Folder')}",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_EmptyNonempty_Folder",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_adls_daily_assignments",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderName": "Raw"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Copy data2",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Copy data1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_EmptyNonempty_Folder",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sql_emp_nonemp",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "NonEmpty Folder": {
                        "type": "Array"
                    },
                    "Empty Folder": {
                        "type": "Array"
                    },
                    "NonEmpty": {
                        "type": "Array"
                    },
                    "Empty1": {
                        "type": "Array"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-16T23:39:35Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/folders_files_count_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Metadata1",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_folders_count",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Metadata1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Metadata1').output.childItems",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Get Metadata2",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_folders_count_param",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "foldersfiles": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "childItems"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "Filter1",
                                    "type": "Filter",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Metadata2",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('Get Metadata2').output.childItems",
                                            "type": "Expression"
                                        },
                                        "condition": {
                                            "value": "@not(empty(item().name))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Lookup1",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Filter1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "insert into dbo.count_folders select '@{item().name}',@{int(activity('Filter1').output.itemscount)}; select 1 as output",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_sql_folderscnt",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "Copy data1",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "FoldersName",
                                                    "value": "$$FILEPATH"
                                                },
                                                {
                                                    "name": "filescount",
                                                    "value": "$$FILEPATH"
                                                }
                                            ],
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "DS_adls_dummy_file",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_sql_folder_files_count",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-12-17T00:38:44Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/getmetadata_filter_act')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Metadata1",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_inputfiles",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "Filter1",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Get Metadata1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Metadata1').output.childItems",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@endswith(item().name,'.txt')",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-12-17T01:02:13Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ass_wait_copy_customer_product')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Wait1",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "Copy customer data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 120
                        }
                    },
                    {
                        "name": "Copy customer data",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_adls_customer_wait",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_adls_wait_sink",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Copy data2",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_adls_orders_wait",
                                "type": "DatasetReference",
                                "parameters": {
                                    "filename": {
                                        "value": "@pipeline().parameters.filename",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_adls_wait_sink",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "filename": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-17T03:09:57Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/until activity_pipeline_ex1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Until1",
                        "type": "Until",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@bool(variables('fileExists'))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Get Metadata1",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_inputfiles",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "fieldList": [
                                            "exists"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Metadata1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@activity('Get Metadata1').output.exists",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Set variable2",
                                                "type": "SetVariable",
                                                "dependsOn": [],
                                                "policy": {
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "fileExists",
                                                    "value": "false"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Set variable1",
                                                "type": "SetVariable",
                                                "dependsOn": [],
                                                "policy": {
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "fileExists",
                                                    "value": "true"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "timeout": "0.00:02:00"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "fileExists": {
                        "type": "String",
                        "defaultValue": "false"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-17T16:00:37Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ass_untill_storedprocedure_copy_customer')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Until1",
                        "type": "Until",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@bool(variables('FileExist'))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Metadata1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@activity('Get Metadata1').output.exists",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Set variable2",
                                                "type": "SetVariable",
                                                "dependsOn": [],
                                                "policy": {
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "FileExist",
                                                    "value": "false"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Set variable1",
                                                "type": "SetVariable",
                                                "dependsOn": [],
                                                "policy": {
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "FileExist",
                                                    "value": "true"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Get Metadata1",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_adls_until_customer",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "fieldList": [
                                            "exists"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    }
                                }
                            ],
                            "timeout": "0.00:02:00"
                        }
                    },
                    {
                        "name": "Script1",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "Until1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "sql_db",
                            "type": "LinkedServiceReference"
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": "SELECT * FROM saleslt.customer_temp "
                                }
                            ],
                            "scriptBlockExecutionTimeout": "02:00:00"
                        }
                    },
                    {
                        "name": "Stored procedure1",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Script1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[customer_temp_delete]",
                            "storedProcedureParameters": {
                                "FirstName": {
                                    "value": {
                                        "value": "@variables('FirstName')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "sql_db",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "FileExist": {
                        "type": "String",
                        "defaultValue": "false"
                    },
                    "FirstName": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-18T15:56:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/switch activity_pipeline_ex')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Switch1",
                        "type": "Switch",
                        "dependsOn": [],
                        "userProperties": [
                            {
                                "name": "activity name",
                                "value": "switch activity running for testing"
                            }
                        ],
                        "typeProperties": {
                            "on": {
                                "value": "@pipeline().parameters.foldername",
                                "type": "Expression"
                            },
                            "cases": [
                                {
                                    "value": "product",
                                    "activities": [
                                        {
                                            "name": "Copy data1",
                                            "type": "Copy",
                                            "dependsOn": [],
                                            "policy": {
                                                "timeout": "0.12:00:00",
                                                "retry": 0,
                                                "retryIntervalInSeconds": 30,
                                                "secureOutput": false,
                                                "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                                "source": {
                                                    "type": "DelimitedTextSource",
                                                    "storeSettings": {
                                                        "type": "AzureBlobFSReadSettings",
                                                        "recursive": true,
                                                        "wildcardFileName": "product",
                                                        "enablePartitionDiscovery": false
                                                    },
                                                    "formatSettings": {
                                                        "type": "DelimitedTextReadSettings"
                                                    }
                                                },
                                                "sink": {
                                                    "type": "DelimitedTextSink",
                                                    "storeSettings": {
                                                        "type": "AzureBlobFSWriteSettings"
                                                    },
                                                    "formatSettings": {
                                                        "type": "DelimitedTextWriteSettings",
                                                        "quoteAllText": true,
                                                        "fileExtension": ".txt"
                                                    }
                                                },
                                                "enableStaging": false,
                                                "translator": {
                                                    "type": "TabularTranslator",
                                                    "typeConversion": true,
                                                    "typeConversionSettings": {
                                                        "allowDataTruncation": true,
                                                        "treatBooleanAsNumber": false
                                                    }
                                                }
                                            },
                                            "inputs": [
                                                {
                                                    "referenceName": "DS_ADLS_inputfiles",
                                                    "type": "DatasetReference",
                                                    "parameters": {}
                                                }
                                            ],
                                            "outputs": [
                                                {
                                                    "referenceName": "ds_adls_daily_assignments",
                                                    "type": "DatasetReference",
                                                    "parameters": {
                                                        "FolderName": "Product_folder"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "value": "address",
                                    "activities": [
                                        {
                                            "name": "Copy data2",
                                            "type": "Copy",
                                            "dependsOn": [],
                                            "policy": {
                                                "timeout": "0.12:00:00",
                                                "retry": 0,
                                                "retryIntervalInSeconds": 30,
                                                "secureOutput": false,
                                                "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                                "source": {
                                                    "type": "DelimitedTextSource",
                                                    "storeSettings": {
                                                        "type": "AzureBlobFSReadSettings",
                                                        "recursive": true,
                                                        "wildcardFileName": "address",
                                                        "enablePartitionDiscovery": false
                                                    },
                                                    "formatSettings": {
                                                        "type": "DelimitedTextReadSettings"
                                                    }
                                                },
                                                "sink": {
                                                    "type": "DelimitedTextSink",
                                                    "storeSettings": {
                                                        "type": "AzureBlobFSWriteSettings"
                                                    },
                                                    "formatSettings": {
                                                        "type": "DelimitedTextWriteSettings",
                                                        "quoteAllText": true,
                                                        "fileExtension": ".txt"
                                                    }
                                                },
                                                "enableStaging": false,
                                                "translator": {
                                                    "type": "TabularTranslator",
                                                    "typeConversion": true,
                                                    "typeConversionSettings": {
                                                        "allowDataTruncation": true,
                                                        "treatBooleanAsNumber": false
                                                    }
                                                }
                                            },
                                            "inputs": [
                                                {
                                                    "referenceName": "ds_inputfiles",
                                                    "type": "DatasetReference",
                                                    "parameters": {}
                                                }
                                            ],
                                            "outputs": [
                                                {
                                                    "referenceName": "ds_adls_daily_assignments",
                                                    "type": "DatasetReference",
                                                    "parameters": {
                                                        "FolderName": "address_folder"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "defaultActivities": [
                                {
                                    "name": "Fail1",
                                    "type": "Fail",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "file not found",
                                        "errorCode": "400004"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "foldername": {
                        "type": "string",
                        "defaultValue": "product"
                    }
                },
                "variables": {
                    "val_true": {
                        "type": "String"
                    },
                    "val_false": {
                        "type": "String"
                    }
                },
                "annotations": [
                    "switch"
                ],
                "lastPublishTime": "2024-12-19T15:31:02Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/validation_pipeline_ex1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Validation1",
                        "type": "Validation",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_validation_adls",
                                "type": "DatasetReference",
                                "parameters": {
                                    "filename": {
                                        "value": "@pipeline().parameters.filename",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "timeout": "0.00:00:10",
                            "sleep": 10
                        }
                    },
                    {
                        "name": "Set variable1",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Validation1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "val_true",
                            "value": "true"
                        }
                    },
                    {
                        "name": "Set variable2",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Validation1",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "val_false",
                            "value": "false"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "filename": {
                        "type": "string"
                    }
                },
                "variables": {
                    "val_true": {
                        "type": "String"
                    },
                    "val_false": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-19T15:06:47Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/copy_data_orcl_table_to_table')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data azure db to oracle db",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "scd1_sql_ds",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ADLS_TGT",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Directory": "SCD",
                                    "filename": "SCD1"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "AA_Learn_IT"
                },
                "annotations": [],
                "lastPublishTime": "2025-04-24T20:15:47Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/tumbing_window_trigger_every5min')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "getmetadata_trigger_ex",
                        "type": "PipelineReference"
                    },
                    "parameters": {}
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 5,
                    "startTime": "2024-11-14T15:23:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 3,
                    "retryPolicy": {
                        "count": 5,
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/storage_event_trigger1')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "storage_triggers_sql_data_query_to_csv",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    },
                    {
                        "pipelineReference": {
                            "referenceName": "Ass6_RestAPI_country_names_json",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "BlobEventsTrigger",
                "typeProperties": {
                    "blobPathBeginsWith": "/landing/blobs/ass6_triggers",
                    "blobPathEndsWith": ".txt",
                    "ignoreEmptyBlobs": false,
                    "scope": "[parameters('storage_event_trigger1_properties_typeProperties_scope')]",
                    "events": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/get_meta_data_activity')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_meta_data",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "sql_generic_ds1",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SchemaNameParam": "saleslt",
                                    "TableNameParam": "product"
                                }
                            },
                            "fieldList": [
                                "structure"
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-11-07T21:58:01Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ingest_sql_data_to_csv')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_product_sql_db_adls",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "sql_db",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adls1_ds",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2025-04-24T20:14:25Z"
            },
            "dependsOn": []
        }
    ]
}