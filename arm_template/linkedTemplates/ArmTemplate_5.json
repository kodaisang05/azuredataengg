{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "SangeethaTraining2024ADF"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/storedProcedure_pipeline_ex1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Stored procedure1",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[emp_delete]",
                            "storedProcedureParameters": {
                                "id": {
                                    "value": {
                                        "value": "@pipeline().parameters.id",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "sql_db",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "id": {
                        "type": "int"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-12-18T02:17:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/dataflowEx3')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_product_adls",
                                "type": "DatasetReference"
                            },
                            "name": "source1"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ADLS_generic_ds1",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "filter1"
                        },
                        {
                            "name": "aggregate1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          ProductID as string,",
                        "          Name as string,",
                        "          ProductNumber as string,",
                        "          Color as string,",
                        "          StandardCost as string,",
                        "          ListPrice as string,",
                        "          Size as string,",
                        "          Weight as string,",
                        "          ProductCategoryID as string,",
                        "          ProductModelID as string,",
                        "          SellStartDate as string,",
                        "          SellEndDate as string,",
                        "          DiscontinuedDate as string,",
                        "          ThumbNailPhoto as string,",
                        "          ThumbnailPhotoFileName as string,",
                        "          rowguid as string,",
                        "          ModifiedDate as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> source1",
                        "source1 filter(equals(Color,'Black')) ~> filter1",
                        "filter1 aggregate(groupBy(Size),",
                        "     MaxCost = max(StandardCost)) ~> aggregate1",
                        "aggregate1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> sink1"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/dataflowEx2')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DS_ADLS_Customer",
                                "type": "DatasetReference"
                            },
                            "name": "source1"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ADLS_generic_ds1",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "filter1"
                        },
                        {
                            "name": "aggregate1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          ProductID as short,",
                        "          Name as string,",
                        "          ProductNumber as string,",
                        "          Color as string,",
                        "          StandardCost as double,",
                        "          ListPrice as double,",
                        "          Size as string,",
                        "          Weight as double,",
                        "          ProductCategoryID as short,",
                        "          ProductModelID as short,",
                        "          SellStartDate as string,",
                        "          SellEndDate as string,",
                        "          DiscontinuedDate as string,",
                        "          ThumbNailPhoto as string,",
                        "          ThumbnailPhotoFileName as string,",
                        "          rowguid as string,",
                        "          ModifiedDate as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> source1",
                        "source1 filter(equals(Color,'Black')) ~> filter1",
                        "filter1 aggregate(groupBy(Size),",
                        "     MaxCost = max(StandardCost)) ~> aggregate1",
                        "aggregate1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> sink1"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/dataflow_example1')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DS_ADLS_Customer",
                                "type": "DatasetReference"
                            },
                            "name": "getdatafromfile"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ADLS_generic_ds1",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "filter1"
                        },
                        {
                            "name": "sort1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          CustomerID as short,",
                        "          NameStyle as boolean,",
                        "          Title as string,",
                        "          FirstName as string,",
                        "          MiddleName as string,",
                        "          LastName as string,",
                        "          Suffix as string,",
                        "          CompanyName as string,",
                        "          SalesPerson as string,",
                        "          EmailAddress as string,",
                        "          Phone as string,",
                        "          PasswordHash as string,",
                        "          PasswordSalt as string,",
                        "          rowguid as string,",
                        "          ModifiedDate as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> getdatafromfile",
                        "getdatafromfile filter(CustomerID < 10) ~> filter1",
                        "filter1 sort(desc(CustomerID, true)) ~> sort1",
                        "sort1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> sink1"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/scd_type2_dataflow')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "scd_type1_ds_adls",
                                "type": "DatasetReference"
                            },
                            "name": "filedata"
                        },
                        {
                            "dataset": {
                                "referenceName": "scd_type2_table_ds",
                                "type": "DatasetReference"
                            },
                            "name": "scd2tabledata"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "scd_type2_table_ds",
                                "type": "DatasetReference"
                            },
                            "name": "sink2InsertDataSCD2"
                        },
                        {
                            "dataset": {
                                "referenceName": "scd_type2_table_ds",
                                "type": "DatasetReference"
                            },
                            "name": "UpdateOLdRecord"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "select1"
                        },
                        {
                            "name": "joinfiledatascd2table"
                        },
                        {
                            "name": "ExistingRecord"
                        },
                        {
                            "name": "derivedColumn1"
                        },
                        {
                            "name": "select2"
                        },
                        {
                            "name": "derivedColumn2"
                        },
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          id as integer,",
                        "          name as string,",
                        "          city as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> filedata",
                        "source(output(",
                        "          Id as integer,",
                        "          name as string,",
                        "          city as string,",
                        "          active_flag as integer",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     format: 'table') ~> scd2tabledata",
                        "scd2tabledata select(mapColumn(",
                        "          db_Id = Id,",
                        "          db_active_flag = active_flag",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> select1",
                        "filedata, select1 join(id == db_Id,",
                        "     joinType:'left',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> joinfiledatascd2table",
                        "joinfiledatascd2table filter(!isNull(db_Id)) ~> ExistingRecord",
                        "ExistingRecord derive(activeflag = 0) ~> derivedColumn1",
                        "derivedColumn1 select(mapColumn(",
                        "          id,",
                        "          activeflag",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> select2",
                        "filedata derive(activeflag = 1) ~> derivedColumn2",
                        "select2 alterRow(updateIf(1==1)) ~> AlterRow1",
                        "derivedColumn2 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          Id as integer,",
                        "          name as string,",
                        "          city as string,",
                        "          active_flag as integer",
                        "     ),",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     saveOrder: 1,",
                        "     errorHandlingOption: 'stopOnFirstError') ~> sink2InsertDataSCD2",
                        "AlterRow1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          Id as integer,",
                        "          name as string,",
                        "          city as string,",
                        "          active_flag as integer",
                        "     ),",
                        "     deletable:false,",
                        "     insertable:false,",
                        "     updateable:true,",
                        "     upsertable:false,",
                        "     keys:['id'],",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     saveOrder: 2,",
                        "     errorHandlingOption: 'stopOnFirstError') ~> UpdateOLdRecord"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/dataflow_customer_even')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "Customer_csv_DS",
                                "type": "DatasetReference"
                            },
                            "name": "customerCSV"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "customer_sql_ds",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "CustomerIDEven"
                        },
                        {
                            "name": "derivedColumn1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          CustomerID as integer,",
                        "          NameStyle as boolean,",
                        "          Title as string,",
                        "          FirstName as string,",
                        "          MiddleName as string,",
                        "          LastName as string,",
                        "          Suffix as string,",
                        "          CompanyName as string,",
                        "          SalesPerson as string,",
                        "          EmailAddress as string,",
                        "          Phone as string,",
                        "          PasswordHash as string,",
                        "          PasswordSalt as string,",
                        "          rowguid as string,",
                        "          ModifiedDate as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> customerCSV",
                        "derivedColumn1 filter(toInteger(CustomerID)%2==0) ~> CustomerIDEven",
                        "customerCSV derive(CustomerID = toInteger(CustomerID),",
                        "          ModifiedDate = currentUTC()) ~> derivedColumn1",
                        "CustomerIDEven sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          CustomerID as integer,",
                        "          NameStyle as boolean,",
                        "          Title as string,",
                        "          FirstName as string,",
                        "          MiddleName as string,",
                        "          LastName as string,",
                        "          Suffix as string,",
                        "          CompanyName as string,",
                        "          SalesPerson as string,",
                        "          EmailAddress as string,",
                        "          Phone as string,",
                        "          PasswordHash as string,",
                        "          PasswordSalt as string,",
                        "          rowguid as string,",
                        "          ModifiedDate as timestamp",
                        "     ),",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     format: 'table',",
                        "     preSQLs:['SET IDENTITY_INSERT customer_dataflow ON;'],",
                        "     postSQLs:['SET IDENTITY_INSERT customer_dataflow OFF;.'],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError',",
                        "     mapColumn(",
                        "          CustomerID,",
                        "          NameStyle,",
                        "          Title,",
                        "          FirstName,",
                        "          MiddleName,",
                        "          LastName,",
                        "          Suffix,",
                        "          CompanyName,",
                        "          SalesPerson,",
                        "          EmailAddress,",
                        "          Phone,",
                        "          PasswordHash,",
                        "          PasswordSalt,",
                        "          rowguid",
                        "     )) ~> sink1"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/SCD3_dataflow')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "scd3_table_ds",
                                "type": "DatasetReference"
                            },
                            "name": "SqlScd3CustomerCity"
                        },
                        {
                            "dataset": {
                                "referenceName": "adls_scd3_ds",
                                "type": "DatasetReference"
                            },
                            "name": "adlsScd3data"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "scd3_table_ds",
                                "type": "DatasetReference"
                            },
                            "name": "scd3DB"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "join1"
                        },
                        {
                            "name": "derivedColumn1"
                        },
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          id as integer,",
                        "          name as string,",
                        "          prev_city as string,",
                        "          crnt_city as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     format: 'table') ~> SqlScd3CustomerCity",
                        "source(output(",
                        "          id as integer,",
                        "          name as string,",
                        "          prev_city as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> adlsScd3data",
                        "SqlScd3CustomerCity, adlsScd3data join(SqlScd3CustomerCity@id == adlsScd3data@id,",
                        "     joinType:'left',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join1",
                        "join1 derive(crnt_city = iif(crnt_city==SqlScd3CustomerCity@prev_city,crnt_city,adlsScd3data@prev_city)) ~> derivedColumn1",
                        "derivedColumn1 alterRow(updateIf(1==1)) ~> AlterRow1",
                        "AlterRow1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          id as integer,",
                        "          name as string,",
                        "          prev_city as string,",
                        "          crnt_city as string",
                        "     ),",
                        "     deletable:false,",
                        "     insertable:false,",
                        "     updateable:true,",
                        "     upsertable:false,",
                        "     keys:['id'],",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError') ~> scd3DB"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/dataflow_pivot_transformation')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DS_product_pivot",
                                "type": "DatasetReference"
                            },
                            "name": "source1"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_adls_daily_assignments",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "pivot1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          customer_id as integer,",
                        "          product_name as string,",
                        "          sales as integer",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> source1",
                        "source1 pivot(groupBy(customer_id),",
                        "     pivotBy(product_name),",
                        "     {} = sum(sales),",
                        "     columnNaming: '$N$V',",
                        "     lateral: true,",
                        "     partitionBy('hash', 1)) ~> pivot1",
                        "pivot1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> sink1"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/train_generic_sql_ds1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "sql_db1_ls",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "SchemaNameParam": {
                        "type": "string"
                    },
                    "TableNameParam": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().SchemaNameParam",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().TableNameParam",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/sql_generic_ds1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "sql_db1_ls",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "SchemaNameParam": {
                        "type": "string"
                    },
                    "TableNameParam": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().SchemaNameParam",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().TableNameParam",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/sql_db')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "sql_db1_ls",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": "SalesLT",
                    "table": "Customer"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/sql_hwm_table_ds')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "sql_db1_ls",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Inc_load_HWM"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_SqlServer_onprime')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_SqlServer_onprim",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "id",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "name",
                        "type": "varchar"
                    },
                    {
                        "name": "city",
                        "type": "varchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Employee"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/SFTP_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy sftp_data_to_adls",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "sftp_ds",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ADLS_gen_DS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folder_path_parameter": "sftp_ds"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-11-07T13:40:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/gm_ass_copy_csv_files')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "check_csv_file_exist",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "gm_adls_ds",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "check_files_copy_csv",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "check_csv_file_exist",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@activity('check_csv_file_exist').output.exists",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy_csv_file",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": "CustomerAddress",
                                                "wildcardFileName": "*.*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "gm_adls_ds",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ADLS_generic_ds1",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FolderPathParam": "ass_gm_copy_csv_file"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-11-07T21:58:01Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/gm_ass1_if_exist')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "if_exist_customeraddress_file",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "gm_adls_ds",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "customeraddress_copy",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "if_exist_customeraddress_file",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@activity('if_exist_customeraddress_file').output.exists",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy_customer_address_file",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "gm_adls_ds",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ADLS_generic_ds1",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FolderPathParam": "GetMetaData_Assignment"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-11-07T21:58:01Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/sftp_server_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy sftp data",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "sftp_ds",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ADLS_generic_ds1",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPathParam": "sftp_ds"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-11-07T21:58:01Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/gm_ass2_copy_entire_folder')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "check_folder_file_exist",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "gm_adls_entire",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "check_copy_entire_folder",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "check_folder_file_exist",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@activity('check_folder_file_exist').output.exists",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "copy_entire_folder",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": "product",
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "gm_adls_entire",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ADLS_generic_ds1",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FolderPathParam": "GM_copy_entire_product"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-11-07T21:58:01Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/getmetadata-foreach')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "getmetadata_foreach",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ADLS_generic_ds1",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPathParam": "product"
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "metadata_foreach",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "getmetadata_foreach",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('getmetadata_foreach').output.childItems",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "getmetadata",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "adls1_ds",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ADLS_generic_ds1",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FolderPathParam": {
                                                    "value": "@concat('getmetadata_foreach_',item())",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2025-04-24T20:14:25Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/gmAss2_entire_folder_exist_copy')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "check_folder_exist",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "gm_adls_entire",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "if_exist_product_folder_copy",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "check_folder_exist",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@activity('check_folder_exist').output.exists",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "copy_product_folder",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": "product",
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "gm_adls_entire",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ADLS_generic_ds1",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FolderPathParam": "gm_ass_entire_product"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-11-07T21:58:01Z"
            },
            "dependsOn": []
        }
    ]
}